# -*- coding: utf-8 -*-
"""wordle.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wCtdcXZ45Rb1FN-ycnQoJIUupUWQ7yEW
"""

!pip install english_words

from english_words import english_words_set

'carer' in english_words_set #??

"""# preprocessing en dict"""

data = [x for x in  english_words_set if (len(x) == 4) or (len(x) == 5)]
print(len(data))

PUNCT_TO_REMOVE = ['\'','.']
word_list = []
for w in data:
    j = 0
    for p in PUNCT_TO_REMOVE:
        if p in w:
            j = 1
            break
    if j == 0:    
        word_list.append(w)

lower_word_list = [x.lower() for x in word_list]
print(lower_word_list[:10])

count_dict = {}
for word in word_list:
    for _letter in word:
        if _letter not in count_dict:
            count_dict[_letter] = 0
        else:
            count_dict[_letter] += 1

#most freq letter
print({k: v for k, v in sorted(count_dict.items(), key=lambda item: item[1])})

"""# start"""

#reals > point > ducky

"""# check word length"""

#some words are plural ex. words
word_length = 5
word_list = [x for x in lower_word_list if len(x) == word_length]
print(len(word_list))

"""#check confirm letter"""

result_word = []
conf_letter = 'eict'
conf_letter_len = len(conf_letter)

for _word in word_list:
    test_count = 0
    for conf in conf_letter:
        # print(conf)
        if conf in _word:
            # print(conf)
            test_count += 1
    # print(test_count)
    if test_count == conf_letter_len:
        # print(_word)
        result_word.append(_word)
print(len(result_word))

if len(result_word) <10:
    print(result_word)

exc_letter = 'ralsponduky'
result_word2 = []

for _word in result_word:
    is_target = 1
    for letter in exc_letter:
        # print(conf)
        if letter in _word:
            # print(letter, _word)
            is_target = 0
            break
    # print(test_count)
    if is_target == 1:
        # print(_word)
        result_word2.append(_word)
print(len(result_word2))

result_word2

res2 = []
wrong_pos = {
    # 0:'r',
    1:'e',
    2:'c',
    4:'t'
}

wrong_pos_len = len(wrong_pos)
for _word in result_word2:
    _count = 0
    for _condi in wrong_pos.items():
        if _word[_condi[0]] != _condi[1]:
            _count += 1
            # print(test_word)
    if _count == len(wrong_pos):
        # print(_count)
        res2.append(_word)
print(len(res2))

# if len(result_wor2) < 10:
#     print(result_word)
res2

res3 = []
correct_pos = {
    # 1: 'u',
    2: 'i'
    }

correct_pos_len = len(correct_pos)
for _word in res2:
    _count = 0
    for _condi in correct_pos.items():
        if _word[_condi[0]] == _condi[1]:
            _count += 1
            # print(test_word)
    if _count == len(correct_pos):
        # print(_count)
        res3.append(_word)
print(len(res3))

res3

